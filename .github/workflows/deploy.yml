name: Deploy Simulation

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        pytest test_app.py -v
        
    - name: Create build artifact
      run: |
        mkdir -p dist
        cp app.py dist/
        cp requirements.txt dist/
        echo "Build completed at $(date)" > dist/build-info.txt
        
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: application-package
        path: dist/
        retention-days: 5

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: staging
      url: https://staging.example.com
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: application-package
        
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment..."
        ls -la
        cat build-info.txt
        echo "Deployment to staging completed!"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, deploy-staging]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: production
      url: https://production.example.com
    
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: application-package
        
    - name: Deploy to production
      run: |
        echo "Deploying to production environment..."
        ls -la
        cat build-info.txt
        echo "Deployment to production completed!"
